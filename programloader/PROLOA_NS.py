import rdflib
from rdflib import URIRef

BASE = "http://example.com/programloader/"
"""Baselink. Use as prefix"""
program = URIRef( f"{BASE}program" )
"""Class of a executable program.
Possible inputarguments are described via hasArgument
"""
hasArgument = URIRef( f"{BASE}hasArgument")
"""Target arg of this property describes the inputargument of a program."""
arg = URIRef( f"{BASE}arg" )
"""Class of possible inputarguments.
Position or keyword of this input is described via id.
Resources used for this input are described by describedBy.
"""
id = URIRef( f"{BASE}id" )
"""Property describing which position or keyword is used for arg.
"""
link = URIRef( f"{BASE}link" )
"""A Class of a filelink"""
app = URIRef( f"{BASE}app" )
"""A Class for a simple app without any inputs.
Used as description how programs are used. It needs the program it uses
and also which inputs are used, when this is executed.
Program which is used is described by executes.
To describe, how arguments are filled, just use the arg connected via id to
the underlying program as property to the input
"""
mutable_resource = URIRef( f"{BASE}mutable_resource" )
"""Node describing which properties are valid for program inputs. If new 
files are generated by an execution of the program, the properties are
valid for the corresponding generated resource.

old description as object:

    A placeholder for newly generated objects, which holds axioms, which 
    are to be asserted for this new resource. 
    If the object is created, through the execution of the corresponding 
    create_program new axioms should be asserted for this resource.
    The axioms which are hold from this placeholder or are hold by another
    placeholder to this placeholder should be generated and added to
    the knowledgegraph.
"""
describedBy = URIRef( f"{BASE}describedBy" )
"""Target mutable_resource by this property describes the resource
used of this node.
"""
declaresInfoLike = URIRef(f"{BASE}declaresInfoLike")
"""Target mutable_resource by this property describes new information
about the resource after the program was succesfully executed
"""
executes = URIRef( f"{BASE}executes" )
"""Target program by this property is executed in place of the app.
"""
failedApp = URIRef(f"{BASE}failedApp")
"""Class of all Apps that raises Exceptions, when executed"""
