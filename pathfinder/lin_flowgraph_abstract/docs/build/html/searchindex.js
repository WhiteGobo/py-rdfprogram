Search.setIndex({"docnames": ["autocomplete_graph", "autodoc_base", "flowgraph", "graphstate", "ideas", "index", "streamlined_intro"], "filenames": ["autocomplete_graph.rst", "autodoc_base.rst", "flowgraph.rst", "graphstate.rst", "ideas.rst", "index.rst", "streamlined_intro.rst"], "titles": ["Autocomplete Graph", "Inline documentation", "Flowgraph", "Graphstates", "Ideas", "Welcome to automatic-generation-pathfinder\u2019s documentation!", "Introduction/ Howto"], "terms": {"class": [1, 2, 3, 6], "lin_flowgraph_abstract": [0, 1, 3, 5, 6], "flowgraph": [1, 5], "state": [1, 2, 3, 6], "_flowgraph": [1, 2], "graphstat": [1, 2, 5, 6], "flowedg": [1, 2], "edge_program": [1, 2], "type": [0, 1, 2, 3], "dict": [0, 1, 2, 3], "direct": [1, 2], "graph": [1, 2, 3, 4, 5], "rdfgraph": [1, 2, 3], "node": [0, 1, 2, 3, 4, 5], "program": [0, 1, 2, 3, 5], "edg": [1, 2, 3], "show": [1, 2], "which": [1, 2, 3, 4], "you": [1, 2, 4, 6], "can": [1, 2, 4, 5, 6], "get": [1, 2], "from": [1, 2, 3, 4, 5], "one": [1, 2, 3, 4, 5, 6], "anoth": [1, 2, 3], "create_directionmap_for_output": [1, 2, 6], "possible_endgraph": [1, 2], "find": [1, 2, 6], "map": [1, 2], "next": [1, 2], "reach": [1, 2], "fastest": [1, 2], "return": [0, 1, 2, 3, 4], "datast": [0, 1, 2], "classmethod": [1, 2], "from_program": [1, 2, 6], "iter": [0, 1, 2, 3], "function_find_startst": [1, 2], "callabl": [1, 2], "limit_flowgraph_s": [1, 2], "true": [1, 2], "produc": [1, 2], "reachabl": [1, 2], "If": [1, 2], "gener": [1, 2, 4], "via": [1, 2, 3], "thi": [0, 1, 2, 3, 4, 5], "cant": [1, 2, 4], "wont": [1, 2], "us": [0, 1, 2, 4, 5, 6], "creat": [0, 1, 2, 4, 5], "new": [1, 2, 4], "paramet": [1, 2, 3, 5], "i": [1, 2, 3, 4, 5], "set": [1, 2], "maxim": [1, 2, 3], "number": [1, 2, 4], "contain": [0, 1, 2, 3, 4], "limit": [1, 2], "5": [1, 2, 5], "todo": [1, 2, 3], "abbrev": [1, 2], "edgetyp": [1, 2], "debug": [1, 2], "log": [1, 2], "chang": [1, 2], "translat": [1, 2, 3], "axiom": [1, 2, 3, 4], "when": [1, 2, 4], "offspr": [1, 2], "get_possible_process": [1, 2], "inputst": [1, 2, 4], "outputst": [1, 2, 4], "option": [1, 2], "none": [1, 2, 3], "neighbouring_graphst": [1, 2], "out": [1, 2, 4], "filter": [1, 2], "bool": [1, 2], "unset": [1, 2], "fals": [1, 2, 3, 4], "also": [1, 2], "search": [0, 1, 2, 3, 5], "mai": [1, 2], "lead": [1, 2], "method": [1, 2, 6], "call": [1, 2, 4, 6], "repeatedli": [1, 2], "Or": [1, 2], "indirect": [1, 2], "connect": [1, 2, 3, 4, 5], "first": [1, 2], "target_superst": [1, 2], "superst": [1, 2], "given": [0, 1, 2, 3, 4], "instead": [1, 2, 5], "themselv": [1, 5], "list": [1, 2, 3], "input": [1, 2, 5], "useabl": [1, 2, 4], "assert": [1, 2], "react": [1, 2], "renam": [1, 3], "immutable_resourc": [1, 3], "exemplifi": [1, 3], "consist": [1, 3], "onli": [1, 3, 4], "minimum": [1, 3], "1": [1, 3, 5], "bnode": [1, 3, 4], "differ": [1, 3, 4], "ar": [0, 1, 2, 3, 4, 5], "same": [1, 3, 4], "thei": [1, 3, 4, 5], "isomorph": [1, 3], "each": [1, 2, 3, 4, 5], "other": [1, 3], "variabl": [1, 3], "resembl": [1, 3], "find_translation_to": 1, "filter_sam": 1, "self": [1, 3, 6], "subgraph": [0, 1, 3], "contro": 1, "everyth": [0, 1, 4], "find_translation_to_subst": 1, "spawn_next_state_from_program": [1, 2], "all": [0, 1, 3, 4, 6], "replac": 1, "stopiter": 1, "mayb": 1, "spawn_prev_state_from_program": [1, 2], "spawn_starting_states_from_program": [1, 2, 6], "myprogram": 1, "function_find_starst": [1, 2], "should": [1, 2, 4, 5], "possibl": [1, 2, 4, 5, 6], "start": [1, 2], "rest": [1, 2], "ascertain": [1, 2], "usag": [1, 2], "just": [1, 2, 4, 6], "inputgraph": [1, 2, 4, 5, 6], "describ": [2, 4, 6], "what": [2, 4], "inform": [1, 2, 3, 4, 5], "The": [1, 2, 3, 4, 5], "standard": 2, "creation": [2, 6], "take": 2, "startpoint": 2, "tri": [0, 2], "valid": [2, 4, 5], "develop": 2, "everi": [2, 4, 5], "parent": 2, "ad": 2, "its": [2, 5, 6], "For": [1, 2, 4, 5, 6], "between": [2, 3, 4, 6], "after": [2, 5], "On": 2, "save": [2, 3], "wa": 2, "ha": [2, 3, 4], "parentst": 2, "certain": 2, "process": [2, 5], "flowgraph_edgemap": 2, "second": 2, "includ": 2, "inputterm": 2, "A": 2, "abstract": [2, 4, 6], "_graphstat": [3, 6], "graphstate_onlynod": [3, 6], "In": [3, 5], "allow": 3, "subject": 3, "object": [3, 6], "predic": 3, "var": 3, "get_nodetype_to_nod": 3, "graphstate_typ": 3, "default": [3, 6], "see": [1, 3], "exactli": [3, 4], "mutabl": [3, 4, 5], "resourc": [1, 3, 4], "overlapping_variablenam": 3, "other_graphst": 3, "determin": 3, "overlap": 3, "to_reduced_st": 3, "nodenam": 3, "accord": 3, "information_placehold": 3, "program_attribut": 3, "rdf_simplification_graph": 3, "status_rdfgraph": 3, "str": 3, "some": 3, "form": [3, 4, 5], "rdflib": [1, 3], "treat": [3, 5], "follow": [3, 4], "correspond": 3, "name": [3, 5], "2": [3, 4, 5], "both": 3, "without": 3, "ani": [1, 3], "discard": 3, "present": [1, 4], "rdf": 4, "descript": [4, 5], "framework": 4, "so": [1, 4], "assum": 4, "reader": 4, "document": 4, "knowledg": 4, "about": 4, "we": 4, "want": 4, "achiev": 4, "an": [3, 4, 6], "properti": [4, 5], "complet": [4, 5], "exampl": 4, "have": 4, "sum": 4, "target": [4, 5], "3": 4, "would": 4, "someth": 4, "like": 4, "prefix": [4, 5], "math": 4, "http": [1, 4, 5], "org": 4, "sum_ov": 4, "To": [4, 6], "request": 4, "comput": 4, "long": 4, "requir": 4, "here": [4, 6], "differenti": 4, "immut": 4, "repres": [1, 4], "inputvari": 4, "up": 4, "two": [4, 6], "outputgraph": [4, 6], "www": 4, "w3": 4, "2000": 4, "01": 4, "schema": 4, "_": [4, 5], "in1": 4, "liter": 4, "in2": 4, "label": 4, "relab": 4, "context": 4, "uri": 4, "thing": 4, "format": 4, "constant": 4, "alwai": 4, "give": 4, "simpl": 4, "sensor": 4, "everytim": 4, "valu": [1, 4], "read": 4, "result": [4, 5], "fail": 4, "categor": 4, "therefor": 4, "condit": 4, "must": [4, 5, 6], "met": 4, "yet": 4, "But": 4, "simplif": 4, "purpos": 4, "introduct": 5, "howto": 5, "datagraph": [0, 5], "idea": 5, "informationgraph": 5, "output": 5, "extra": 5, "thingi": 5, "how": [5, 6], "build": 5, "inlin": 5, "index": 5, "modul": [0, 5], "page": 5, "implement": [3, 6], "execut": [5, 6], "function": [3, 6], "pack": 6, "either": [1, 6], "default_program_class": 6, "own": 6, "deliv": 6, "better": 6, "py": [], "myflow": 6, "testprogram": 6, "control": [], "generationflow": 6, "q": [], "post1": [], "transit": 6, "found": [3, 5, 6], "rdfgraph_flowgraph": [1, 5, 6], "myflow2": 6, "create_program_from_datagraph": [0, 6], "testprogram3": 6, "complete_datagraph": [0, 1, 5, 6], "wholegraph": [0, 1, 6], "test_program_iter": [], "from_flowgraph": 6, "program_iter": [1, 5, 6], "discuss": 0, "surround": 0, "autocomplet": [], "input_outputgraph": 1, "missing_nod": 1, "used_wholegraph": 1, "ignore_nod": 1, "term": 1, "uriref": 1, "automaton": 1, "generation_target": 1, "generation_success": 1, "find_partgraph": 1, "minimal_graph_s": 1, "_get_superst": 1, "induc": 1, "partgraph": 1, "extract": 1, "returnvalu": 1, "more": 1, "int": 1, "minim": 1, "size": 1, "intro": 5, "further": 5, "autodoc": 5, "complete_data_with_info": 0, "generatable_with": 0, "myflowgraph": 0, "fill": 0, "data": 0, "automaticli": 0, "need": 0, "do": 0, "complete_datagraph_old": 0, "find_maximal_datastates_containing_partgraphs_old": 0, "tupl": 0, "nodelist": 0, "find_possible_generators_old": 0, "maxpartgraph": 0, "hashabl": 0, "interest": 1, "insid": 1, "miss": 1, "usabl": 1, "creatabl": 1, "rewrit": [], "code": 5, "maximalgraph": 5, "targetgraph": 5, "sparql": 5, "origin": 5, "temporari": 5, "assign": 5, "partstructur": 5, "neighbour": 5, "alreadi": 5, "exist": 5, "time": 5, "algorithm": [], "whole": 5, "work": 5, "ignor": 5, "directli": 5, "store": 5, "global_rdfgraph": 5, "myth": 5, "mein": 5, "command": 5, "value1": 5, "value2": 5, "prioriti": 5, "graphstate_to_sparql_search": 3, "search_in": 3, "target_graph": 3, "replace_mutable_resourc": 3, "over": 3, "": 3, "remov": 3, "except": 3, "handl": 3, "safe": 3, "step": 5, "lowest": 5, "evalu": 5, "prior": 5, "add": 3, "itself": 3}, "objects": {"": [[2, 0, 0, "-", "_flowgraph"], [1, 0, 0, "-", "lin_flowgraph_abstract"]], "_flowgraph": [[2, 1, 1, "flowgraph.Edge_program", "Edge_program"], [2, 2, 1, "flowgraph.FLOWGRAPH_EDGEMAP", "FLOWGRAPH_EDGEMAP"], [2, 1, 1, "flowgraph.GraphState", "GraphState"], [2, 1, 1, "flowgraph.Program", "Program"], [2, 1, 1, "flowgraph.flowgraph", "flowgraph"]], "_flowgraph.GraphState": [[2, 3, 1, "flowgraph.GraphState.spawn_next_state_from_program", "spawn_next_state_from_program"], [2, 3, 1, "flowgraph.GraphState.spawn_prev_state_from_program", "spawn_prev_state_from_program"], [2, 3, 1, "flowgraph.GraphState.spawn_starting_states_from_program", "spawn_starting_states_from_program"]], "_flowgraph.flowgraph": [[2, 3, 1, "flowgraph.flowgraph.create_directionmap_for_output", "create_directionmap_for_output"], [2, 3, 1, "flowgraph.flowgraph.from_programs", "from_programs"], [2, 3, 1, "flowgraph.flowgraph.get_possible_processes", "get_possible_processes"]], "lin_flowgraph_abstract": [[3, 0, 0, "-", "_graphstate"], [0, 0, 0, "-", "create_program_from_datagraph"], [1, 1, 1, "", "flowgraph"], [1, 1, 1, "", "graphstate"], [1, 1, 1, "", "program_iterator"], [1, 1, 1, "", "rdfgraph_flowgraph"]], "lin_flowgraph_abstract._graphstate": [[3, 1, 1, "", "graphstate_onlynodes"], [3, 1, 1, "", "graphstate_to_sparql_search"], [3, 1, 1, "", "information_placeholder"], [3, 1, 1, "", "program"], [3, 1, 1, "", "program_attribute"], [3, 1, 1, "", "rdf_simplification_graph"]], "lin_flowgraph_abstract._graphstate.graphstate_onlynodes": [[3, 3, 1, "", "get_nodetype_to_nodes"], [3, 3, 1, "", "overlapping_variablenames"], [3, 3, 1, "", "to_reduced_state"]], "lin_flowgraph_abstract._graphstate.graphstate_to_sparql_search": [[3, 3, 1, "", "search_in"]], "lin_flowgraph_abstract.create_program_from_datagraph": [[0, 4, 1, "", "complete_data_with_info"], [0, 4, 1, "", "complete_datagraph"], [0, 4, 1, "", "complete_datagraph_old"], [0, 4, 1, "", "find_maximal_datastates_containing_partgraphs_old"], [0, 4, 1, "", "find_possible_generators_old"]], "lin_flowgraph_abstract.flowgraph": [[1, 3, 1, "", "create_directionmap_for_output"], [1, 3, 1, "", "from_programs"], [1, 3, 1, "", "get_possible_processes"]], "lin_flowgraph_abstract.graphstate": [[1, 3, 1, "", "find_translation_to"], [1, 3, 1, "", "find_translation_to_substate"], [1, 3, 1, "", "spawn_next_state_from_program"], [1, 3, 1, "", "spawn_prev_state_from_program"], [1, 3, 1, "", "spawn_starting_states_from_program"]], "lin_flowgraph_abstract.rdfgraph_flowgraph": [[1, 3, 1, "", "complete_datagraph"], [1, 3, 1, "", "find_partgraphs"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:data", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "data", "Python data"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"inlin": 1, "document": [1, 5], "flowgraph": [2, 6], "descript": 2, "how": 2, "build": 2, "themselv": 2, "extra": [2, 3], "thingi": [2, 3], "graphstat": [3, 4], "idea": 4, "informationgraph": 4, "program": [4, 6], "its": 4, "input": 4, "output": 4, "welcom": 5, "automat": [5, 6], "gener": 5, "pathfind": 5, "": 5, "content": 5, "indic": 5, "tabl": 5, "introduct": 6, "howto": 6, "creat": 6, "process": 6, "todo": 6, "from": 6, "target": 6, "inform": 6, "graph": [0, 6], "new": [5, 6], "datagraph": 6, "autocomplet": [0, 5], "intro": 0, "further": 0, "autodoc": 0, "next": 5, "thing": 5, "do": 5, "file": 5, "all": 5, "rdf": 5, "resourc": 5, "necessari": 5, "rewrit": 5, "algorithm": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Ideas": [[4, "ideas"]], "informationgraphs and graphstates": [[4, "informationgraphs-and-graphstates"]], "program and its input and outputs": [[4, "program-and-its-input-and-outputs"]], "extra thingis": [[2, "module-_flowgraph"], [3, "module-lin_flowgraph_abstract._graphstate"]], "Flowgraph": [[2, "flowgraph"]], "Description": [[2, "description"]], "How flowgraphs build themselves": [[2, "how-flowgraphs-build-themselves"]], "Autocomplete Graph": [[0, "autocomplete-graph"]], "intro": [[0, "intro"]], "further autodoc": [[0, "module-lin_flowgraph_abstract.create_program_from_datagraph"]], "Introduction/ Howto": [[6, "introduction-howto"]], "Creating programs for automatic processing": [[6, "creating-programs-for-automatic-processing"]], "Todo": [[6, "id1"], [6, "id2"], [6, "id3"]], "Creating flowgraphs from programs": [[6, "creating-flowgraphs-from-programs"]], "target information to a graph": [[6, "target-information-to-a-graph"]], "Creating new information from datagraph": [[6, "creating-new-information-from-datagraph"]], "Welcome to automatic-generation-pathfinder\u2019s documentation!": [[5, "welcome-to-automatic-generation-pathfinder-s-documentation"]], "Contents:": [[5, null]], "Next things to do": [[5, "next-things-to-do"]], "New file with all rdf-resources necessary": [[5, "new-file-with-all-rdf-resources-necessary"]], "Rewrite autocomplete algorithm": [[5, "rewrite-autocomplete-algorithm"]], "Indices and tables": [[5, "indices-and-tables"]], "Inline documentation": [[1, "module-lin_flowgraph_abstract"]], "Graphstates": [[3, "graphstates"]]}, "indexentries": {"complete_datagraph() (lin_flowgraph_abstract.rdfgraph_flowgraph method)": [[1, "lin_flowgraph_abstract.rdfgraph_flowgraph.complete_datagraph"]], "create_directionmap_for_output() (lin_flowgraph_abstract.flowgraph method)": [[1, "lin_flowgraph_abstract.flowgraph.create_directionmap_for_output"]], "find_partgraphs() (lin_flowgraph_abstract.rdfgraph_flowgraph method)": [[1, "lin_flowgraph_abstract.rdfgraph_flowgraph.find_partgraphs"]], "find_translation_to() (lin_flowgraph_abstract.graphstate method)": [[1, "lin_flowgraph_abstract.graphstate.find_translation_to"]], "find_translation_to_substate() (lin_flowgraph_abstract.graphstate method)": [[1, "lin_flowgraph_abstract.graphstate.find_translation_to_substate"]], "flowgraph (class in lin_flowgraph_abstract)": [[1, "lin_flowgraph_abstract.flowgraph"]], "from_programs() (lin_flowgraph_abstract.flowgraph class method)": [[1, "lin_flowgraph_abstract.flowgraph.from_programs"]], "get_possible_processes() (lin_flowgraph_abstract.flowgraph method)": [[1, "lin_flowgraph_abstract.flowgraph.get_possible_processes"]], "graphstate (class in lin_flowgraph_abstract)": [[1, "lin_flowgraph_abstract.graphstate"]], "lin_flowgraph_abstract": [[1, "module-lin_flowgraph_abstract"]], "module": [[1, "module-lin_flowgraph_abstract"], [3, "module-lin_flowgraph_abstract._graphstate"]], "program_iterator (class in lin_flowgraph_abstract)": [[1, "lin_flowgraph_abstract.program_iterator"]], "rdfgraph_flowgraph (class in lin_flowgraph_abstract)": [[1, "lin_flowgraph_abstract.rdfgraph_flowgraph"]], "spawn_next_state_from_program() (lin_flowgraph_abstract.graphstate method)": [[1, "lin_flowgraph_abstract.graphstate.spawn_next_state_from_program"]], "spawn_prev_state_from_program() (lin_flowgraph_abstract.graphstate method)": [[1, "lin_flowgraph_abstract.graphstate.spawn_prev_state_from_program"]], "spawn_starting_states_from_program() (lin_flowgraph_abstract.graphstate class method)": [[1, "lin_flowgraph_abstract.graphstate.spawn_starting_states_from_program"]], "get_nodetype_to_nodes() (lin_flowgraph_abstract._graphstate.graphstate_onlynodes method)": [[3, "lin_flowgraph_abstract._graphstate.graphstate_onlynodes.get_nodetype_to_nodes"]], "graphstate_onlynodes (class in lin_flowgraph_abstract._graphstate)": [[3, "lin_flowgraph_abstract._graphstate.graphstate_onlynodes"]], "graphstate_to_sparql_search (class in lin_flowgraph_abstract._graphstate)": [[3, "lin_flowgraph_abstract._graphstate.graphstate_to_sparql_search"]], "information_placeholder (class in lin_flowgraph_abstract._graphstate)": [[3, "lin_flowgraph_abstract._graphstate.information_placeholder"]], "lin_flowgraph_abstract._graphstate": [[3, "module-lin_flowgraph_abstract._graphstate"]], "overlapping_variablenames() (lin_flowgraph_abstract._graphstate.graphstate_onlynodes method)": [[3, "lin_flowgraph_abstract._graphstate.graphstate_onlynodes.overlapping_variablenames"]], "program (class in lin_flowgraph_abstract._graphstate)": [[3, "lin_flowgraph_abstract._graphstate.program"]], "program_attribute (class in lin_flowgraph_abstract._graphstate)": [[3, "lin_flowgraph_abstract._graphstate.program_attribute"]], "rdf_simplification_graph (class in lin_flowgraph_abstract._graphstate)": [[3, "lin_flowgraph_abstract._graphstate.rdf_simplification_graph"]], "search_in() (lin_flowgraph_abstract._graphstate.graphstate_to_sparql_search method)": [[3, "lin_flowgraph_abstract._graphstate.graphstate_to_sparql_search.search_in"]], "to_reduced_state() (lin_flowgraph_abstract._graphstate.graphstate_onlynodes method)": [[3, "lin_flowgraph_abstract._graphstate.graphstate_onlynodes.to_reduced_state"]]}})